Index: app/src/main/java/com/geofence/geofence_mobile/data/geo/entities/EventLog.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.geofence.geofence_mobile.data.geo.entities\r\n\r\nimport androidx.room.Entity\r\nimport androidx.room.PrimaryKey\r\n\r\n/**\r\n * Entity data class represents a single row in the database.\r\n */\r\n@Entity(tableName = \"event_logs\")\r\ndata class EventLog(\r\n    @PrimaryKey(autoGenerate = true)\r\n    val logId: Int,\r\n    val fenceId: Int,\r\n//    val time: Timestamp,\r\n    val message: String\r\n)
===================================================================
diff --git a/app/src/main/java/com/geofence/geofence_mobile/data/geo/entities/EventLog.kt b/app/src/main/java/com/geofence/geofence_mobile/data/geo/entities/EventLog.kt
--- a/app/src/main/java/com/geofence/geofence_mobile/data/geo/entities/EventLog.kt	
+++ b/app/src/main/java/com/geofence/geofence_mobile/data/geo/entities/EventLog.kt	
@@ -13,4 +13,5 @@
     val fenceId: Int,
 //    val time: Timestamp,
     val message: String
-)
\ No newline at end of file
+)
+
Index: app/src/main/java/com/geofence/geofence_mobile/data/geo/GeoRepo.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.geofence.geofence_mobile.data.geo\r\n\r\n//import com.example.inventory.data.Item\r\nimport com.geofence.geofence_mobile.data.geo.entities.EventLog\r\nimport com.geofence.geofence_mobile.data.geo.entities.Fence\r\nimport com.geofence.geofence_mobile.data.geo.entities.Location\r\nimport com.geofence.geofence_mobile.data.geo.entities.Route\r\n\r\n/**\r\n * Repository that provides insert, update, delete, and retrieve of [Item] from a given data source.\r\n */\r\ninterface GeoRepo {\r\n    /**\r\n     * Retrieve all the items from the the given data source.\r\n     */\r\n//    fun getAllItemsStream(): Flow<List<Item>>\r\n\r\n    /**\r\n     * Retrieve an item from the given data source that matches with the [id].\r\n     */\r\n//    fun getItemStream(id: Int): Flow<Item?>\r\n\r\n    /**\r\n     * Insert item in the data source\r\n     */\r\n    suspend fun insertFence(fence: Fence)\r\n    suspend fun insertRoute(route: Route)\r\n\r\n    suspend fun insertLocation(location: Location)\r\n\r\n    suspend fun insertEventLog(eventLog: EventLog)\r\n\r\n    /**\r\n     * Delete item from the data source\r\n     */\r\n//    suspend fun deleteItem(item: Item)\r\n\r\n    /**\r\n     * Update item in the data source\r\n     */\r\n//    suspend fun updateItem(item: Item)\r\n}\r\n
===================================================================
diff --git a/app/src/main/java/com/geofence/geofence_mobile/data/geo/GeoRepo.kt b/app/src/main/java/com/geofence/geofence_mobile/data/geo/GeoRepo.kt
--- a/app/src/main/java/com/geofence/geofence_mobile/data/geo/GeoRepo.kt	
+++ b/app/src/main/java/com/geofence/geofence_mobile/data/geo/GeoRepo.kt	
@@ -7,22 +7,11 @@
 import com.geofence.geofence_mobile.data.geo.entities.Route
 
 /**
- * Repository that provides insert, update, delete, and retrieve of [Item] from a given data source.
+ * Repository that provides insert, update, delete, and retrieve of the entities from a given data source.
  */
 interface GeoRepo {
-    /**
-     * Retrieve all the items from the the given data source.
-     */
-//    fun getAllItemsStream(): Flow<List<Item>>
 
-    /**
-     * Retrieve an item from the given data source that matches with the [id].
-     */
-//    fun getItemStream(id: Int): Flow<Item?>
 
-    /**
-     * Insert item in the data source
-     */
     suspend fun insertFence(fence: Fence)
     suspend fun insertRoute(route: Route)
 
Index: .idea/misc.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"ExternalStorageConfigurationManager\" enabled=\"true\" />\r\n  <component name=\"ProjectRootManager\" version=\"2\" languageLevel=\"JDK_17\" project-jdk-name=\"17\" project-jdk-type=\"JavaSDK\">\r\n    <output url=\"file://$PROJECT_DIR$/build/classes\" />\r\n  </component>\r\n  <component name=\"ProjectType\">\r\n    <option name=\"id\" value=\"Android\" />\r\n  </component>\r\n</project>
===================================================================
diff --git a/.idea/misc.xml b/.idea/misc.xml
--- a/.idea/misc.xml	
+++ b/.idea/misc.xml	
@@ -1,7 +1,6 @@
-<?xml version="1.0" encoding="UTF-8"?>
 <project version="4">
   <component name="ExternalStorageConfigurationManager" enabled="true" />
-  <component name="ProjectRootManager" version="2" languageLevel="JDK_17" project-jdk-name="17" project-jdk-type="JavaSDK">
+  <component name="ProjectRootManager" version="2" languageLevel="JDK_17" default="true" project-jdk-name="17" project-jdk-type="JavaSDK">
     <output url="file://$PROJECT_DIR$/build/classes" />
   </component>
   <component name="ProjectType">
